{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/next-shadcn-dashboard-starter/src/components/active-theme.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  ReactNode,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\n\r\nconst COOKIE_NAME = 'active_theme';\r\nconst DEFAULT_THEME = 'default';\r\n\r\nfunction setThemeCookie(theme: string) {\r\n  if (typeof window === 'undefined') return;\r\n\r\n  document.cookie = `${COOKIE_NAME}=${theme}; path=/; max-age=31536000; SameSite=Lax; ${window.location.protocol === 'https:' ? 'Secure;' : ''}`;\r\n}\r\n\r\ntype ThemeContextType = {\r\n  activeTheme: string;\r\n  setActiveTheme: (theme: string) => void;\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport function ActiveThemeProvider({\r\n  children,\r\n  initialTheme\r\n}: {\r\n  children: ReactNode;\r\n  initialTheme?: string;\r\n}) {\r\n  const [activeTheme, setActiveTheme] = useState<string>(\r\n    () => initialTheme || DEFAULT_THEME\r\n  );\r\n\r\n  useEffect(() => {\r\n    setThemeCookie(activeTheme);\r\n\r\n    Array.from(document.body.classList)\r\n      .filter((className) => className.startsWith('theme-'))\r\n      .forEach((className) => {\r\n        document.body.classList.remove(className);\r\n      });\r\n    document.body.classList.add(`theme-${activeTheme}`);\r\n    if (activeTheme.endsWith('-scaled')) {\r\n      document.body.classList.add('theme-scaled');\r\n    }\r\n  }, [activeTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ activeTheme, setActiveTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useThemeConfig() {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      'useThemeConfig must be used within an ActiveThemeProvider'\r\n    );\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAUA,MAAM,cAAc;AACpB,MAAM,gBAAgB;AAEtB,SAAS,eAAe,KAAa;IACnC,wCAAmC;;AAGrC;AAOA,MAAM,6BAAe,CAAA,GAAA,oUAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,oBAAoB,EAClC,QAAQ,EACR,YAAY,EAIb;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAC3C,IAAM,gBAAgB;IAGxB,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;QAEf,MAAM,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAC/B,MAAM,CAAC,CAAC,YAAc,UAAU,UAAU,CAAC,WAC3C,OAAO,CAAC,CAAC;YACR,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACjC;QACF,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,aAAa;QAClD,IAAI,YAAY,QAAQ,CAAC,YAAY;YACnC,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAC9B;IACF,GAAG;QAAC;KAAY;IAEhB,qBACE,6WAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAa;QAAe;kBACzD;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,oUAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/next-shadcn-dashboard-starter/src/components/layout/providers.tsx"],"sourcesContent":["'use client';\r\nimport { ClerkProvider } from '@clerk/nextjs';\r\nimport { dark } from '@clerk/themes';\r\nimport { useTheme } from 'next-themes';\r\nimport React from 'react';\r\nimport { ActiveThemeProvider } from '../active-theme';\r\n\r\nexport default function Providers({\r\n  activeThemeValue,\r\n  children\r\n}: {\r\n  activeThemeValue: string;\r\n  children: React.ReactNode;\r\n}) {\r\n  // we need the resolvedTheme value to set the baseTheme for clerk based on the dark or light theme\r\n  const { resolvedTheme } = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <ActiveThemeProvider initialTheme={activeThemeValue}>\r\n        <ClerkProvider\r\n          appearance={{\r\n            baseTheme: resolvedTheme === 'dark' ? dark : undefined\r\n          }}\r\n        >\r\n          {children}\r\n        </ClerkProvider>\r\n      </ActiveThemeProvider>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AALA;;;;;;AAOe,SAAS,UAAU,EAChC,gBAAgB,EAChB,QAAQ,EAIT;IACC,kGAAkG;IAClG,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE;kBACE,cAAA,6WAAC,qIAAA,CAAA,sBAAmB;YAAC,cAAc;sBACjC,cAAA,6WAAC,kYAAA,CAAA,gBAAa;gBACZ,YAAY;oBACV,WAAW,kBAAkB,SAAS,kOAAA,CAAA,OAAI,GAAG;gBAC/C;0BAEC;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/next-shadcn-dashboard-starter/src/components/ui/sonner.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useTheme } from 'next-themes';\r\nimport { Toaster as Sonner, ToasterProps } from 'sonner';\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = 'system' } = useTheme();\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps['theme']}\r\n      className='toaster group'\r\n      style={\r\n        {\r\n          '--normal-bg': 'var(--popover)',\r\n          '--normal-text': 'var(--popover-foreground)',\r\n          '--normal-border': 'var(--border)'\r\n        } as React.CSSProperties\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Toaster };\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6WAAC,wQAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/next-shadcn-dashboard-starter/src/components/layout/ThemeToggle/theme-provider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  ThemeProvider as NextThemesProvider,\r\n  ThemeProviderProps\r\n} from 'next-themes';\r\n\r\nexport default function ThemeProvider({\r\n  children,\r\n  ...props\r\n}: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAOe,SAAS,cAAc,EACpC,QAAQ,EACR,GAAG,OACgB;IACnB,qBAAO,6WAAC,wRAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}}]
}